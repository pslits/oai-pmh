name: PHP CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports: ['3306:3306']
        options: >-
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, xdebug
          coverage: xdebug

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist

      - name: Run linter
        run: ./vendor/bin/phpcs --standard=PSR12 src/

      - name: Run static analysis
        run: ./vendor/bin/phpstan analyse src/ --level=max

      - name: Start PHP server with error logging
        run: |
          mkdir -p ./logs  # Create logs directory if it doesn't exist
          php -S localhost:8000 -t . > ./logs/php_errors.log 2>&1 &  # Start the PHP server and log errors

      - name: Wait for server to start
        run: sleep 2  # Give the server some time to start

      - name: Check if server is running
        run: curl -v http://localhost:8000/oai.php  # Check if the server is responding

      - name: Display PHP errors
        run: cat ./logs/php_errors.log  # Show PHP error log contents for debugging  

      - name: Run tests
        env:
          BASE_URL: http://localhost:8000/oai.php
        run: |
          php -dxdebug.mode=coverage ./vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
